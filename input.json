{
  "verilog": "module counter(input clk, output reg [3:0] out);\n  always @(posedge clk)\n    out <= out + 1;\nendmodule",
  "metrics": {
    "clock_frequency": "100 MHz",
    "power_estimate": "50 mW",
    "gate_count": 5000
  },
  "prompt": "Analyze this Verilog code for hardware flaws (e.g., timing, logic, power, security issues). List any flaws found with a description, location, suggested fix, and confidence (0-100%). Return the result as a JSON array. If no flaws, return []. Code:\nmodule counter(input clk, output reg [3:0] out);\n  always @(posedge clk)\n    out <= out + 1;\nendmodule\nMetrics:\n{\n  \"clock_frequency\": \"100 MHz\",\n  \"power_estimate\": \"50 mW\",\n  \"gate_count\": 5000\n}"
}